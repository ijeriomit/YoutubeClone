{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"label\", null, null, -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"query\",\n    id: \"query\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.formData.query.value = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.formData.query.value]])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","type","name","id","_cache","$event","$setup","formData","query","value"],"sources":["/Users/ijeriomitogun/Projects/TypescriptProjects/interview-web-client/src/components/PageForm.vue"],"sourcesContent":["<template>\n  <form>\n    <label></label>\n    <input type=\"text\" name=\"query\" id=\"query\" v-model=\"formData.query.value\" />\n  </form>\n</template>\n<script setup>\nimport { reactive } from \"vue\";\n\nconst formData = reactive({\n  query: {\n    label: \"Query\",\n    name: \"query\",\n    validations: [{ required: true, message: \"Query is Required\" }],\n    value: {},\n  },\n});\n</script>\n"],"mappings":";;uBACEA,mBAAA,CAGO,e,0BAFLC,mBAAA,CAAe,yC,gBACfA,mBAAA,CAA4E;IAArEC,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,OAAO;IAACC,EAAE,EAAC,OAAO;IAH9C,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGwDC,MAAA,CAAAC,QAAQ,CAACC,KAAK,CAACC,KAAK,GAAAJ,MAAA;iDAApBC,MAAA,CAAAC,QAAQ,CAACC,KAAK,CAACC,KAAK,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}